# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Dict, List, Literal, Mapping, TYPE_CHECKING, Union, overload

from .. import _model_base
from .._model_base import rest_discriminator, rest_field
from ._enums import AuthenticationType

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class ConnectionProperties(_model_base.Model):
    """to do.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    ConnectionPropertiesAADAuth, ConnectionPropertiesApiKeyAuth, ConnectionPropertiesSASAuth


    :ivar auth_type: Authentication type of the connection target. Required. Known values are:
     "ApiKey", "AAD", and "SAS".
    :vartype auth_type: str or ~azure.ai.client.models.AuthenticationType
    """

    __mapping__: Dict[str, _model_base.Model] = {}
    auth_type: str = rest_discriminator(name="authType")
    """Authentication type of the connection target. Required. Known values are: \"ApiKey\", \"AAD\",
     and \"SAS\"."""

    @overload
    def __init__(
        self,
        *,
        auth_type: str,
    ): ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ConnectionPropertiesAADAuth(ConnectionProperties, discriminator="AAD"):
    """Connection properties for connections with AAD authentication (aka ``Entra ID passthrough``\\
    ).


    :ivar auth_type: Authentication type of the connection target. Required. Entra ID
     authentication
    :vartype auth_type: str or ~azure.ai.client.models.AAD
    :ivar category: Category of the connection. Required. Known values are: "AzureOpenAI" and
     "Serverless".
    :vartype category: str or ~azure.ai.client.models.ConnectionType
    :ivar target: to do. Required.
    :vartype target: str
    """

    auth_type: Literal[AuthenticationType.AAD] = rest_discriminator(name="authType")  # type: ignore
    """Authentication type of the connection target. Required. Entra ID authentication"""
    category: Union[str, "_models.ConnectionType"] = rest_field()
    """Category of the connection. Required. Known values are: \"AzureOpenAI\" and \"Serverless\"."""
    target: str = rest_field()
    """to do. Required."""

    @overload
    def __init__(
        self,
        *,
        category: Union[str, "_models.ConnectionType"],
        target: str,
    ): ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, auth_type=AuthenticationType.AAD, **kwargs)


class ConnectionPropertiesApiKeyAuth(ConnectionProperties, discriminator="ApiKey"):
    """Connection properties for connections with API key authentication.


    :ivar auth_type: Authentication type of the connection target. Required. API Key authentication
    :vartype auth_type: str or ~azure.ai.client.models.API_KEY
    :ivar category: Category of the connection. Required. Known values are: "AzureOpenAI" and
     "Serverless".
    :vartype category: str or ~azure.ai.client.models.ConnectionType
    :ivar credentials: Credentials will only be present for authType=ApiKey. Required.
    :vartype credentials: ~azure.ai.client.models.CredentialsApiKeyAuth
    :ivar target: to do. Required.
    :vartype target: str
    """

    auth_type: Literal[AuthenticationType.API_KEY] = rest_discriminator(name="authType")  # type: ignore
    """Authentication type of the connection target. Required. API Key authentication"""
    category: Union[str, "_models.ConnectionType"] = rest_field()
    """Category of the connection. Required. Known values are: \"AzureOpenAI\" and \"Serverless\"."""
    credentials: "_models.CredentialsApiKeyAuth" = rest_field()
    """Credentials will only be present for authType=ApiKey. Required."""
    target: str = rest_field()
    """to do. Required."""

    @overload
    def __init__(
        self,
        *,
        category: Union[str, "_models.ConnectionType"],
        credentials: "_models.CredentialsApiKeyAuth",
        target: str,
    ): ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, auth_type=AuthenticationType.API_KEY, **kwargs)


class ConnectionPropertiesSASAuth(ConnectionProperties, discriminator="SAS"):
    """Connection properties for connections with SAS authentication.


    :ivar auth_type: Authentication type of the connection target. Required. Shared Access
     Signature (SAS) authentication
    :vartype auth_type: str or ~azure.ai.client.models.SAS
    :ivar category: Category of the connection. Required. Known values are: "AzureOpenAI" and
     "Serverless".
    :vartype category: str or ~azure.ai.client.models.ConnectionType
    :ivar credentials: Credentials will only be present for authType=ApiKey. Required.
    :vartype credentials: ~azure.ai.client.models.CredentialsSASAuth
    :ivar target: to do. Required.
    :vartype target: str
    """

    auth_type: Literal[AuthenticationType.SAS] = rest_discriminator(name="authType")  # type: ignore
    """Authentication type of the connection target. Required. Shared Access Signature (SAS)
     authentication"""
    category: Union[str, "_models.ConnectionType"] = rest_field()
    """Category of the connection. Required. Known values are: \"AzureOpenAI\" and \"Serverless\"."""
    credentials: "_models.CredentialsSASAuth" = rest_field()
    """Credentials will only be present for authType=ApiKey. Required."""
    target: str = rest_field()
    """to do. Required."""

    @overload
    def __init__(
        self,
        *,
        category: Union[str, "_models.ConnectionType"],
        credentials: "_models.CredentialsSASAuth",
        target: str,
    ): ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, auth_type=AuthenticationType.SAS, **kwargs)


class ConnectionsListResponse(_model_base.Model):
    """to do.


    :ivar value: to do. Required.
    :vartype value: list[~azure.ai.client.models.ConnectionsListSecretsResponse]
    """

    value: List["_models.ConnectionsListSecretsResponse"] = rest_field()
    """to do. Required."""

    @overload
    def __init__(
        self,
        *,
        value: List["_models.ConnectionsListSecretsResponse"],
    ): ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class ConnectionsListSecretsResponse(_model_base.Model):
    """to do.


    :ivar name: The name of the resource. Required.
    :vartype name: str
    :ivar properties: The properties of the resource. Required.
    :vartype properties: ~azure.ai.client.models.ConnectionProperties
    """

    name: str = rest_field()
    """The name of the resource. Required."""
    properties: "_models.ConnectionProperties" = rest_field()
    """The properties of the resource. Required."""

    @overload
    def __init__(
        self,
        *,
        name: str,
        properties: "_models.ConnectionProperties",
    ): ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class CredentialsApiKeyAuth(_model_base.Model):
    """to do.


    :ivar key: to do. Required.
    :vartype key: str
    """

    key: str = rest_field()
    """to do. Required."""

    @overload
    def __init__(
        self,
        *,
        key: str,
    ): ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)


class CredentialsSASAuth(_model_base.Model):
    """to do.


    :ivar sas: to do. Required.
    :vartype sas: str
    """

    sas: str = rest_field(name="SAS")
    """to do. Required."""

    @overload
    def __init__(
        self,
        *,
        sas: str,
    ): ...

    @overload
    def __init__(self, mapping: Mapping[str, Any]):
        """
        :param mapping: raw JSON to initialize the model.
        :type mapping: Mapping[str, Any]
        """

    def __init__(self, *args: Any, **kwargs: Any) -> None:  # pylint: disable=useless-super-delegation
        super().__init__(*args, **kwargs)
