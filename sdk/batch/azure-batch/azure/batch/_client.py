# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) Python Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from copy import deepcopy
from typing import Any, TYPE_CHECKING

from azure.core import PipelineClient
from azure.core.rest import HttpRequest, HttpResponse

from ._configuration import BatchServiceClientConfiguration
from ._serialization import Deserializer, Serializer
from .operations import (
    AccountOperations,
    ApplicationsOperations,
    BatchNodesOperations,
    CertificatesOperations,
    JobOperations,
    JobScheduleOperations,
    PoolOperations,
    TaskOperations,
)

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from azure.core.credentials import TokenCredential


class BatchServiceClient:  # pylint: disable=client-accepts-api-version-keyword,too-many-instance-attributes
    """A client for issuing REST requests to the Azure Batch service.

    :ivar applications: ApplicationsOperations operations
    :vartype applications: azure.batch.operations.ApplicationsOperations
    :ivar pool: PoolOperations operations
    :vartype pool: azure.batch.operations.PoolOperations
    :ivar account: AccountOperations operations
    :vartype account: azure.batch.operations.AccountOperations
    :ivar job: JobOperations operations
    :vartype job: azure.batch.operations.JobOperations
    :ivar certificates: CertificatesOperations operations
    :vartype certificates: azure.batch.operations.CertificatesOperations
    :ivar job_schedule: JobScheduleOperations operations
    :vartype job_schedule: azure.batch.operations.JobScheduleOperations
    :ivar task: TaskOperations operations
    :vartype task: azure.batch.operations.TaskOperations
    :ivar batch_nodes: BatchNodesOperations operations
    :vartype batch_nodes: azure.batch.operations.BatchNodesOperations
    :param credential: Credential needed for the client to connect to Azure. Required.
    :type credential: ~azure.core.credentials.TokenCredential
    :keyword endpoint: Service host. Required.
    :paramtype endpoint: str
    :keyword api_version: The API version to use for this operation. Default value is
     "2023-05-01.17.0". Note that overriding this default value may result in unsupported behavior.
    :paramtype api_version: str
    """

    def __init__(self, credential: "TokenCredential", *, endpoint: str, **kwargs: Any) -> None:
        self._config = BatchServiceClientConfiguration(credential=credential, **kwargs)
        self._client: PipelineClient = PipelineClient(
            base_url=endpoint, config=self._config, request_id_header_name="client-request-id", **kwargs
        )

        self._serialize = Serializer()
        self._deserialize = Deserializer()
        self._serialize.client_side_validation = False
        self.applications = ApplicationsOperations(self._client, self._config, self._serialize, self._deserialize)
        self.pool = PoolOperations(self._client, self._config, self._serialize, self._deserialize)
        self.account = AccountOperations(self._client, self._config, self._serialize, self._deserialize)
        self.job = JobOperations(self._client, self._config, self._serialize, self._deserialize)
        self.certificates = CertificatesOperations(self._client, self._config, self._serialize, self._deserialize)
        self.job_schedule = JobScheduleOperations(self._client, self._config, self._serialize, self._deserialize)
        self.task = TaskOperations(self._client, self._config, self._serialize, self._deserialize)
        self.batch_nodes = BatchNodesOperations(self._client, self._config, self._serialize, self._deserialize)

    def send_request(self, request: HttpRequest, **kwargs: Any) -> HttpResponse:
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client.send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/dpcodegen/python/send_request

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """

        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, **kwargs)

    def close(self) -> None:
        self._client.close()

    def __enter__(self) -> "BatchServiceClient":
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details: Any) -> None:
        self._client.__exit__(*exc_details)
